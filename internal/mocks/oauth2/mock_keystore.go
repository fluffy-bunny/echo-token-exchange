// Code generated by MockGen. DO NOT EDIT.
// Source: echo-starter/internal/contracts/go-oauth2/oauth2 (interfaces: ISigningKeyStore)

// Package oauth2 is a generated GoMock package.
package oauth2

import (
	models "echo-starter/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISigningKeyStore is a mock of ISigningKeyStore interface.
type MockISigningKeyStore struct {
	ctrl     *gomock.Controller
	recorder *MockISigningKeyStoreMockRecorder
}

// MockISigningKeyStoreMockRecorder is the mock recorder for MockISigningKeyStore.
type MockISigningKeyStoreMockRecorder struct {
	mock *MockISigningKeyStore
}

// NewMockISigningKeyStore creates a new mock instance.
func NewMockISigningKeyStore(ctrl *gomock.Controller) *MockISigningKeyStore {
	mock := &MockISigningKeyStore{ctrl: ctrl}
	mock.recorder = &MockISigningKeyStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISigningKeyStore) EXPECT() *MockISigningKeyStoreMockRecorder {
	return m.recorder
}

// GetPublicWebKeys mocks base method.
func (m *MockISigningKeyStore) GetPublicWebKeys() ([]*models.PublicJwk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicWebKeys")
	ret0, _ := ret[0].([]*models.PublicJwk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicWebKeys indicates an expected call of GetPublicWebKeys.
func (mr *MockISigningKeyStoreMockRecorder) GetPublicWebKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicWebKeys", reflect.TypeOf((*MockISigningKeyStore)(nil).GetPublicWebKeys))
}

// GetSigningKeys mocks base method.
func (m *MockISigningKeyStore) GetSigningKeys() ([]*models.SigningKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSigningKeys")
	ret0, _ := ret[0].([]*models.SigningKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSigningKeys indicates an expected call of GetSigningKeys.
func (mr *MockISigningKeyStoreMockRecorder) GetSigningKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSigningKeys", reflect.TypeOf((*MockISigningKeyStore)(nil).GetSigningKeys))
}
