// Code generated by MockGen. DO NOT EDIT.
// Source: echo-starter/internal/contracts/stores/tokenstore (interfaces: IJwtTokenStore)

// Package tokenstore is a generated GoMock package.
package tokenstore

import (
	context "context"
	models "echo-starter/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIJwtTokenStore is a mock of IJwtTokenStore interface.
type MockIJwtTokenStore struct {
	ctrl     *gomock.Controller
	recorder *MockIJwtTokenStoreMockRecorder
}

// MockIJwtTokenStoreMockRecorder is the mock recorder for MockIJwtTokenStore.
type MockIJwtTokenStoreMockRecorder struct {
	mock *MockIJwtTokenStore
}

// NewMockIJwtTokenStore creates a new mock instance.
func NewMockIJwtTokenStore(ctrl *gomock.Controller) *MockIJwtTokenStore {
	mock := &MockIJwtTokenStore{ctrl: ctrl}
	mock.recorder = &MockIJwtTokenStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJwtTokenStore) EXPECT() *MockIJwtTokenStoreMockRecorder {
	return m.recorder
}

// MintToken mocks base method.
func (m *MockIJwtTokenStore) MintToken(arg0 context.Context, arg1 models.IClaims) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MintToken", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MintToken indicates an expected call of MintToken.
func (mr *MockIJwtTokenStoreMockRecorder) MintToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MintToken", reflect.TypeOf((*MockIJwtTokenStore)(nil).MintToken), arg0, arg1)
}
