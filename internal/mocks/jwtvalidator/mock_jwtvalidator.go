// Code generated by MockGen. DO NOT EDIT.
// Source: echo-starter/internal/contracts/jwtvalidator (interfaces: IJWTValidator)

// Package jwtvalidator is a generated GoMock package.
package jwtvalidator

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	jwt "github.com/lestrrat-go/jwx/jwt"
)

// MockIJWTValidator is a mock of IJWTValidator interface.
type MockIJWTValidator struct {
	ctrl     *gomock.Controller
	recorder *MockIJWTValidatorMockRecorder
}

// MockIJWTValidatorMockRecorder is the mock recorder for MockIJWTValidator.
type MockIJWTValidatorMockRecorder struct {
	mock *MockIJWTValidator
}

// NewMockIJWTValidator creates a new mock instance.
func NewMockIJWTValidator(ctrl *gomock.Controller) *MockIJWTValidator {
	mock := &MockIJWTValidator{ctrl: ctrl}
	mock.recorder = &MockIJWTValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJWTValidator) EXPECT() *MockIJWTValidatorMockRecorder {
	return m.recorder
}

// ValidateJWTRaw mocks base method.
func (m *MockIJWTValidator) ValidateJWTRaw(arg0 context.Context, arg1 string) (jwt.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateJWTRaw", arg0, arg1)
	ret0, _ := ret[0].(jwt.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateJWTRaw indicates an expected call of ValidateJWTRaw.
func (mr *MockIJWTValidatorMockRecorder) ValidateJWTRaw(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateJWTRaw", reflect.TypeOf((*MockIJWTValidator)(nil).ValidateJWTRaw), arg0, arg1)
}
